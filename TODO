!IMPORTANT:
  ☐ <Pause/> component, for bootstrapping/setting up <Party/>, <Character/>s and <Menu/>
  ☐ Update /store/Store.js with initStore() method for help in bootstrapping
      https://stackoverflow.com/questions/60999058/load-initialstate-dynamically-with-createslice-in-redux-toolkit
  ☐ 


Game Menu: 
  ✔ Only one item selectable at a time @done(20-09-27 14:40)
  ✔ Clicking Back in the menu should undo applying item effects @done(20-09-27 15:16)
  ✔ Clicking the active item should deactivate it @done(20-09-27 15:30)
  ✔ When applying item, deactivate states for the weapon/armor menu @done(20-09-27 15:58)
  Post-item Usage:
      clearing the classes on Character components
      So I handled the item quantity case for the UI,
      but now I need to figure out how to properly have
      the Character watch itself for when its stats values
      have been restored to max, and disable the classes
      appropriately to return the UI to where
      it needs to be.
      update: pretty sure I can rely on the
      canItemBeUsed paradigm to dispatch necessary
      actions
      In the end, what I ended up doing was writing an action
      creator that returned a function that received a dispatch
      and getState function as arguments, and used those to check
      state of the character stat and deactivate the item to return
      the UI to its regular state.
       
      ✔ State updates @done(21-04-01 19:22)
        ✔ deactivate item @done(20-09-27 17:32)
        ✔ disable menu option @done(20-09-27 17:32)
        ✔ dispatch deactivateItem @done(21-02-26 03:14)

  Weapon Equip:
    ✔ Setup click handler for WeaponMenu @done(21-04-01 19:17)
        
    UI Updates:
        ✔ On weapon select, announce active item @done(21-04-01 19:17)
        ✔ Party component sets class @done(21-04-01 19:19)
        ✔ Character components determine if they can use the weapon, dim if not @done(21-04-01 19:19)
        ✔ User clicks Character component, weapon swaps... @done(21-04-01 19:19)
        ✔ ...Character weapon flashes/pulses name @done(21-04-01 20:33)
        ✔ Classes are removed, UI returns to normal @done(21-04-01 20:08)
        ☐ Highlight weapon name in yellow when clicking it direct to equip new weapon

    State Updates:
        ✔ onClick handler, setGearToEquip() @done(21-04-01 19:19)
        ✔ onCharacterSelect, if gearToEquip is truthy, and its a weapon type for the character, dispatch equip() @done(21-04-01 19:20)
        ✔ Take the name & type from the setGearToEquip, apply damage calculation @done(21-04-01 19:20)
        Do weapons have their own innate damage, or do different types have a formula that then gets calculated when equipped to the character to know how much damage it does? If we do have a formula, what should it be? I feel like damage and armor should adjust to the level of the character equipping it. We could even have a scaling boost factor based on, maybe, item rarity? Or some kind of power level?
        For now let's just say damage per character is level + damage.
        Crit chance can be flat 25%. 
        Crit damage can be flat 50%.
        ✔ Spread new object data into char.gear.weapon @done(21-04-01 19:16)
        ✔ Put previously-equipped weapon into inventory @done(21-04-02 08:31)
    
  ✔ Weapon menu pulling from partySlice @done(21-03-29 08:27)
  ✔ Armor menu pulling from partySlice @done(21-03-29 08:27)

  Armor Equip:
    UI Updates:
      ✔ Ensure functionality is same as for Weapons @done(21-04-02 02:05)
      ☐ Highlight armor in yellow when directly clicking to equip armor
    State Updates:
      ✔ Ensure state updates similarly to Weapons @done(21-04-02 02:05)
      ✔ Put previously-equipped armor into inventory @done(21-04-02 02:05)

  Scroll/Spell Equip:
    UI Updates:
      ☐ Mostly same as weapons & armor but probably need something a lil different
      ☐ Scroll disappears from inventory
      ☐ Show pop up like, "${char.name} learned 'Cure'!"
    State Updates:

  UI Fine-tuning:
    ✔ Show hand on hovered Character (changed to showing color) @done(20-09-27 15:49)
    ✔ When clicking BackOption clear Character 'select' state @done(20-09-27 15:49)
    ✔ Adjusted areas of weapon/armor slots to be more mouse-friendly @done(20-09-27 16:05)

World Map: 

Battle System:

Quest:
  ☐ State Updates

IndexedDB:
  ☐ DB Creation
  ☐ Interaction Layer

Saving Game:
  ☐ DB Data 

Coding:
  ✘ Maybe PropTypes? @cancelled(21-04-02 12:02)
  ✔ Change State shape for characters to an id-based set of keys in an object @done(21-04-02 01:13)
      eg, party.chars[ $charId ].stats.hp, etc
  ✔ Also need to adjust inventory stuffs to account for IDs, finally @done(21-04-02 02:05)
  ☐ Generate IDs for items, gear
  ☐ Reduce clicks needed to equip when clicking a gear slot directly on a character
      User clicks weapon or armor slot
      <WeaponMenu/> or <ArmorMenu/> opens
      User clicks desired weapon or armor to equip
      dispatch equip action for the given gearItem
      dispatch methods for resetting UI

Bugfixes:
  ✔ make sure onCharacterSelect only fires when applying item not when selecting for weapon or armor @done(20-09-23 22:24)
  ✔ Fixed a bug where I wasn't properly checking the current character's state in Redux and therefore couldn't properly react to state changes and decide if we needed to deactivate the current item because the character's current stat value had met or exceeded their max value. @done(21-02-26 03:12)

